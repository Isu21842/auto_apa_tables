---
title: "Automatically Create APA Tables"
---

# Step 1: Load packages and functions
```{r, echo=FALSE}
pacman::p_load(pacman, officer, flextable, tidyverse, magrittr)

# Function to convert empty values into "" and to make p-value column conform to apa conventions
apa_conv <- function(data){
  # these columns will only be altered if they are present in the data frame 
  # convert NA's into empty values
  data[is.na(data)] <- ""
  # grab column names
  three_dec <- data[,colnames(data)=="p"]
  # convert 0s into <.001
  three_dec[three_dec==0]<-"<.001"
  # make 1s into 1.000
  three_dec <- ifelse(three_dec=="1","1.000",three_dec)
  # add a 0 if there are only 2 significant digits
  three_dec <- ifelse(nchar(three_dec)==4,paste0(three_dec,"0"),three_dec)
  # add two 0s if there is only 1 significant digit
  three_dec <- ifelse(nchar(three_dec)==3,paste0(three_dec,"00"),three_dec)
  # put the data back together
  data[,colnames(data)=="p"] <- three_dec
  return(data)
}

# Function to have tables autofit to page
FitFlextableToPage <- function(ft, pgwidth = 6){
  # set as autofit to make width parameters adjustable
  ft_out <- ft %>% autofit()
  # set width as function of page width
  ft_out <- width(ft_out, width = dim(ft_out)$widths*pgwidth /(flextable_dim(ft_out)$widths))
  return(ft_out)
}
```

# Step 2: Create table
```{r}
# example data
df <- data.frame(
  "Var1" = rnorm(8),
  "Var2" = rnorm(8),
  "Var3" = rnorm(8),
  "Var4" = rnorm(8),
  "Var5" = rnorm(8)
)

# initialize word doc
doc <- read_docx()

# replace ... with space if necessary
for(i in 1:ncol(df)){
  colnames(df)[i] <- gsub("\\...", " ", colnames(df)[i])
}

# load data frame as the table variable
table <- df

# set this as 1 if you have a footnote
footnote <- 1

# modify flextable to fit APA style
table <- flextable(table) %>%
                           font(fontname = "Times New Roman", part = "all") %>%
                           align(j = 2:length(df), align = "center", part = "all") %>%
                           fontsize(size = 10, part = "all") %>%
                           # This is where I will set the caption
                           set_caption(caption = as_paragraph(as_chunk("Table 1.1: Kung Fu Panda", props = fp_text(font.size = 10, font.family = "Times New Roman"))), fp_p = fp_par(text.align = "left", padding.left = 14), align_with_table = FALSE) %>%
                           border_remove() %>%
                           hline_top(
                               border = officer::fp_border(width = 1),
                               part = "all") %>%
                           hline_top(
                               border = officer::fp_border(width = 0),
                               part = "header") %>%
                           hline_bottom(
                               border = officer::fp_border(width = 1),
                               part = "body") %>%
                          # italicize the second and third column from the column names (adjust if needed)
                          italic(i = NULL, j = c(2, 3), part = "header")
# put footnote here
if(footnote==1){
  table %<>%
        add_footer_lines(c("Notes. Checking this one out.", 
                           "* p < .05, ** p < .01, *** p < .001")) %>%
        font(fontname = "Times New Roman", part = "footer") %>%
        fontsize(size = 10, part = "footer")
}

table <- FitFlextableToPage(table)
# append table to doc
doc <- body_add_flextable(doc, value = table)

# save the word doc
print(doc, target = "check.docx")
```

